#! /usr/bin/env sh
#
# Script that controls some eww variables related to the music/video status in 
# the top bar and the notification panel. This script tries it best to overcome 
# the weird behaviours of the players and the limitations of the playerctl utili-
# ty and even after these attempts, its still a quite a bit hacky.

fetch_album_art() {
    local cover_art_uri=$(playerctl -p $player metadata mpris:artUrl)

    case $player in
        spotify)
            cover_art_path="$cache/eww_player_art"
            curl $cover_art_uri -o $cover_art_path
        ;;
        firefox)
            # Remove file:// prefix from uri
            cover_art_path=${cover_art_uri#"file://"}
        ;;
        *)  
            cover_art_path=""
        ;;
    esac
}

priority_list="spotify,firefox" 
cache="$HOME/.cache"

playerctl -p $priority_list -F metadata -f '{{playerName}} {{title}} {{status}}' | \
while read -r line; do 
    if [[ -z $line ]]; then
        eww update player_active=false
        continue
    fi

    player=$(echo $line | awk '{ print $1 }')
    status=$(playerctl -p $player status)
    title=$(playerctl -p $player metadata title)
    artist=$(playerctl -p $player metadata artist)
    [[ $player = "spotify" ]] && uri=$(playerctl -p $player metadata xesam:url) 

    [[ $status = "Playing" ]] && status="" || status=""

    # When spotify starts up, the title and artist starts empty,
    # even though the album art url is set. So we will default it
    # to "Unknown" and use the fallback album art to avoid confusion 
    [[ -z $title ]] && title="Unknown" && artist="Unknown"

    # Update variables asynchronously
    eww update player_active=true \
               player_name="$player" \
               player_status="$status" \
               player_title="$title" \
               player_artist="$artist" \
               player_uri="$uri"

    # Fetch album/cover art and update variable
    fetch_album_art
    eww update player_cover_art="$cover_art_path"
done
