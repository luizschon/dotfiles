(defvar show_date false)
(defvar show_player_control false)

(defpoll time
    :interval "1s"
    `source $HOME/.config/eww/scripts/blink-hour`)

(defpoll date
    :interval "1m"
    :initial "date +'%d/%m/%Y'"
    `date +'%d/%m/%Y'`)

(defvar player_name "")
(defvar player_active false)
(defvar player_status "")
(defvar player_title "")
(defvar player_artist "")
(defvar player_cover_art "")
(defvar player_uri "")
(defvar fallback_cover_art "assets/fallback_cover_art.jpg")

(defwindow top-bar
    :class "top-bar"
    :monitor 0
    :geometry (geometry
        :x "0%"
        :y "7px"
        :width "82%"
        :height "47px"
        :anchor "top center")
    :stacking "fg"
    :reserve (struts :distance "54px" :side "top")
    :windowtype "dock"
    :wm-ignore false
    (bar_container))

(defwidget bar_container []
    (centerbox
        :class "container"
        (left_container)
        (center_container)
        (right_container)))

(defwidget left_container []
    (literal
        :content workspaces))

(defwidget center_container []
    (player))

(defwidget player []
    (box
        :orientation "h"
        :space-evenly false
        :valign "center"
        :halign "center"
        :visible player_active
            (eventbox
                    :vexpand true
                    :onhover "eww update show_player_control=true"
                    :onhoverlost "eww update show_player_control=false"
                    :class "music-player container"
                    (box
                        :spacing 8
                        :space-evenly false
                        (overlay
                            (box :class "music-art" 
                                :style "background-image: url('${fallback_cover_art}')")
                            (box :class "music-art"
                                :style "background-image: url('${player_cover_art}')")
                        )
                        (box
                            :space-evenly false
                            :class "text"
                            (box player_title)
                            (separator :padding "12px")
                            (box player_artist))
                        (revealer
                            :transition "slideright"
                            :reveal show_player_control
                            :duration "0.4s"
                            (box
                                :spacing 8
                                :class "player-controls"
                                (eventbox
                                    :class "fw-bw"
                                    :cursor "pointer"
                                    :onclick "playerctl -p ${player_name} previous"
                                    "")
                                (eventbox
                                    :class "play-pause"
                                    :cursor "pointer"
                                    :onclick "playerctl -p ${player_name} play-pause"
                                    player_status)
                                (eventbox
                                    :class "fw-bw"
                                    :cursor "pointer"
                                    :onclick "playerctl -p ${player_name} next"
                                    "")))))))

(defwidget right_container []
    (box
        :class "container"
        :space-evenly false
        :halign "end"
        :valign "center"
        :vexpand true
        (date)))

(defwidget date []
    (box
        :space-evenly false
        :valign "center"
        :vexpand true
        (eventbox
            :cursor "pointer"
            :class "container"
            :onhover "eww update show_date=true"
            :onhoverlost "eww update show_date=false"
            (box
                :space-evenly false
                (revealer
                    :transition "slideleft"
                    :reveal show_date
                    :duration "0.4s"
                    (box :space-evenly false
                        (glyph :text "")
                        (box :class "date" :space-evenly false date (separator :padding "7px"))))
                (box :class "date" time)))
        (glyph :text "")))

(defwidget glyph [text]
    (box :class "glyph" text))

(defwidget separator [padding]
    (box 
        :class "separator"
        :style "padding: 0 ${padding} 5px ${padding}"
        ""))

